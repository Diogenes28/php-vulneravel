# Nome do workflow que aparece na aba "Actions" do GitHub
name: Veracode Pipeline Scan

# Quando este workflow será executado
on:
  push:
    branches: [ "main" ]  # Ao fazer push na branch main
  pull_request:
    branches: [ "main" ]  # Ao abrir PRs para a main
  schedule:
    - cron: '20 5 * * 3'  # Toda quarta-feira às 05:20 UTC

jobs:
  veracode-pipeline-scan:
    runs-on: ubuntu-latest

    steps:
      # Etapa 1: Clona o repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # Etapa 2: Compacta todos os arquivos do repositório em um arquivo ZIP (exceto .git e workflows)
      - name: Compactar arquivos
        run: |
          zip -r app.zip . -x "*.git*" ".github/*"

      # Etapa 3: Executa o Veracode Pipeline Scan com a ação oficial
      - name: Executar Veracode Pipeline Scan
        uses: veracode/Veracode-pipeline-scan-action@v1.0.18
        with:
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          file: app.zip
          fail_build: false

      # Etapa 4: Baixa o conversor JSON para SARIF e executa se o arquivo results.json existir
      - name: Baixar e converter JSON para SARIF (se results.json existir)
        run: |
          curl -sSLO https://raw.githubusercontent.com/veracode/veracode-pipeline-scan-results-to-sarif/main/scripts/convert_json_to_sarif.py
          if [ -f results.json ]; then
            python3 convert_json_to_sarif.py -i results.json -o results.sarif
          else
            echo "Arquivo results.json não encontrado. Verifique se o scan foi executado corretamente."
            exit 1
          fi

      # Etapa 5: Envia o arquivo SARIF para a aba de "Code scanning alerts"
      - name: Upload do relatório SARIF para o GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
