# Esse workflow faz análise de segurança estática no seu código PHP usando o Veracode Pipeline Scan
# Os resultados aparecem diretamente na aba "Code Scanning Alerts" do GitHub

name: Veracode Static Analysis Pipeline Scan

on:
  workflow_dispatch:  # Permite execução manual pelo botão "Run workflow"
  push:
    branches: [ master ]  # Roda quando houver push na branch "master"
  pull_request:
    branches: [ master ]  # Roda quando alguém abrir um PR para a branch "master"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Baixa os arquivos do repositório para o ambiente de execução
      - uses: actions/checkout@v3

      # Empacota os arquivos PHP e outros arquivos relevantes em um .zip
      - name: Criar pacote .zip do código
        run: zip -R project.zip '*.php' '*.html' '*.js' '*.css' '*.json'

      # Salva o .zip como artefato para ser usado no próximo job
      - name: Salvar pacote como artefato
        uses: actions/upload-artifact@v4
        with:
          name: CodePackage
          path: project.zip

  pipeline-scan:
    needs: build
    runs-on: ubuntu-latest

    container:
      image: veracode/pipeline-scan:latest
      options: --user root

    steps:
      # Recupera o arquivo .zip gerado no job anterior
      - name: Baixar o artefato do código
        uses: actions/download-artifact@v4
        with:
          name: CodePackage

      # Executa o Veracode Pipeline Scan com as credenciais armazenadas nos secrets
      - name: Executar Veracode Pipeline Scan
        run: |
          java -jar /opt/veracode/pipeline-scan.jar \
            --veracode_api_id="${{ secrets.VERACODE_API_ID }}" \
            --veracode_api_key="${{ secrets.VERACODE_API_KEY }}" \
            --fail_on_severity="Very High, High" \
            --file="project.zip" \
            --app_id="${{ secrets.VERACODE_APP_ID }}" \
            --json_output_file="results.json"
        continue-on-error: true  # Mesmo com vulnerabilidades, o fluxo continua para gerar relatórios

      # Salva os resultados da análise como artefato para o próximo job
      - name: Salvar resultados do scan
        uses: actions/upload-artifact@v4
        with:
          name: ScanResults
          path: results.json

  process-results:
    needs: pipeline-scan
    runs-on: ubuntu-latest

    steps:
      # Necessário para que o upload-sarif funcione corretamente
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Baixar resultados do Veracode
        uses: actions/download-artifact@v4
        with:
          name: ScanResults

      - name: Converter JSON para SARIF
        uses: veracode/veracode-pipeline-scan-results-to-sarif@master
        with:
          pipeline-results-json: results.json
          output-results-sarif: veracode-results.sarif
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enviar resultados SARIF para GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: veracode-results.sarif
